# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  image-build:
    environment:
      DOCKER_IMAGE: theoldmoon0602/shellgeibot
    docker:
      - image: docker:stable
        environment:
          DOCKER_BUILDKIT: "1"  # Enable Docker BuildKit
    steps:
      - checkout
      - setup_remote_docker:
          # docker_layer_caching: true  # 有償オプション
          version: "18.09.3"
      - run:
          name: Build Docker image
          command: |
            apk add --no-progress git jq curl
            git log --pretty="format:%h %cd %s [%an]" --date=iso -n 20 > revision.log
            ./.circleci/get_build_log.sh > ci_build.log
            docker build -t ${DOCKER_IMAGE} --progress=plain .
      - run:
          name: Test Docker image
          command: |
            apk add --no-progress nodejs npm
            npm_config_unsafe_perm=true npm install --global --silent --no-progress tap-xunit
            mkdir -p ~/reports
            docker create -v /root/src --name source ubuntu:19.04 /bin/true
            docker cp docker_image.bats source:/root/src
            docker container run --net=none --rm --volumes-from source ${DOCKER_IMAGE} \
              /bin/bash -c "bats --tap /root/src/docker_image.bats || true" | tee result.tap
            cat result.tap | tap-xunit > ~/reports/result.xml
      - store_test_results:
          path: ~/reports
      - run:
          name: Push Docker image to Docker Hub
          command: |
            if [ "${CIRCLE_BRANCH}" = "master" ]; then
              DATE_TAG=$(date +%Y%m%d)
              echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin
              docker tag ${DOCKER_IMAGE}:latest ${DOCKER_IMAGE}:${DATE_TAG}
              docker tag ${DOCKER_IMAGE}:latest ${DOCKER_IMAGE}:${CIRCLE_BRANCH}
              docker push ${DOCKER_IMAGE}:${DATE_TAG}
              docker push ${DOCKER_IMAGE}:${CIRCLE_BRANCH}
              docker push ${DOCKER_IMAGE}:latest
            fi
      - add_ssh_keys:
          fingerprints:
            - "29:cf:20:0a:41:36:28:49:a2:ef:7c:b3:ae:05:5b:47"
      - deploy:
          name: Apply New Image to Running
          command: |
            test "${CIRCLE_BRANCH}" = master && apk add openssh && ssh-keyscan ${SSH_HOST} >> ~/.ssh/known_hosts && ssh -p ${SSH_PORT} ${SSH_USER}@${SSH_HOST} "docker pull theoldmoon0602/shellgeibot:master && docker rmi \$(docker images | grep '<none>' | awk '{print $3}')" || :

workflows:
  version: 2
  commit-workflow:
    jobs:
      - image-build
  scheduled-workflow:
    triggers:
      - schedule:
          cron: "0 2 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - image-build
